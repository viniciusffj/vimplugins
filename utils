# vim: ft=sh

_PROJECT_FOLDER=~/Projects

alias ..="cd .."

v() { _expand_last_arg_if_number vim $@; }
g() { _expand_last_arg_if_number git $@; }
c() { _expand_last_arg_if_number cat $@; }

repl() {
	screen -S repl $1

	echo -n 'Exit terminal? (Y/n): ' && read -n 1 should_exit
	[ $should_exit == 'n' ] && echo && return
	exit 0
}

ff() { _myfind "f" "*$1*"; }
ft() { _myfind "f" "*.$1"; }
fd() { _myfind "d" "*$1*"; }
fl() { _print_found; }

gs() {
	FFOUND_PWD=${PWD}
	FFOUND=()
	local index=0
	local last_file=""

	while read line; do
		file=$(echo ${line} | awk -F':' '{ print $1 }')

		if [[ ${file} != ${last_file} ]];then
			FFOUND[${index}]=${file}
			last_file=${file}
			((index++))
		fi

		if [ -t 1 ]; then printf "% 4d " $index; fi
		echo $line

	done < <(egrep --color=always -RIn $@ *)
}

fn() {
	if [[ "$1" && "$1" =~ ^[0-9]+$ ]]; then
		item=${FFOUND[$1-1]}
		if [ -z "$item" ]; then return; fi
		if [ "$PWD" != "$FFOUND_PWD" ]; then echo -n $FFOUND_PWD/; fi
		echo ${item##$FFOUND_PWD//}
	elif [ "$1" ]; then
		echo $1
	fi
}

ww() {
	if [ "$1" != "" ]; then
		cd $1;
		export WORK_DIR=`pwd`;
	else
		cd $WORK_DIR;
	fi
}

wl() { [[ -z $WORK_DIR ]] && echo "No current workspace defined" || echo $WORK_DIR; }

p() { cd ${_PROJECT_FOLDER}/$1; }
pw() { ww ${_PROJECT_FOLDER}/$1; }

_complete_projects() {
	local cur
	cur=${COMP_WORDS[COMP_CWORD]}
	subs=`expr "${_PROJECT_FOLDER}" : ".*\/\(.*\)" `
	COMPREPLY=( $( compgen -S/ -d ${_PROJECT_FOLDER}/$cur | sed s/.*${subs}.// ) )
}

complete -o nospace -F _complete_projects p
complete -o nospace -F _complete_projects pw

_myfind() { _track_files < <(find -L "$PWD"/ -type "$1" -iname "$2" -not -name "*.svn*"); }

_expand_last_arg_if_number() {
	ARGS=($@)
	local pos_of_last_argument=$(expr ${#ARGS[@]} - 1)
	local last_argument=${ARGS[${pos_of_last_argument}]}

	if ! echo $last_argument | grep -q '^[0-9]\+$'; then
		"$@"
		return
	fi

	ARGS=(${ARGS[@]:0:$pos_of_last_argument})
	${ARGS[@]} $(fn "${last_argument}")
}

_print_found() {
	local length=${#FFOUND[*]}
	local index=1
	while [ "$index" -le "$length" ]; do
		if [ -t 1 ]; then printf "% 4d " $index; fi
		fn $index
		((index++))
	done
}

_track_files() {
	FFOUND_PWD=${PWD}
	FFOUND=()
	while read -r data; do
		eval FFOUND+=($(echo ${data} | sed -e 's/.*/"&"/'))
	done
	_print_found
}
